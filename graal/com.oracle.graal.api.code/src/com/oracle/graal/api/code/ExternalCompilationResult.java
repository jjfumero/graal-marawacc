/*
 * Copyright (c) 2009, 2013, Oracle and/or its affiliates. All rights reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
 * or visit www.oracle.com if you need additional information or have any
 * questions.
 */
package com.oracle.graal.api.code;

/**
 * Represents the output from compiling a method generated by Graal, but executing in a memory and
 * computational subsystem outside the Graal host system.
 * 
 * Output may include the compiled machine code, associated data and references, relocation
 * information, deoptimization information, as this result is generated from a structure graph on
 * the Graal host system.
 */
public class ExternalCompilationResult extends CompilationResult {

    private static final long serialVersionUID = 1L;

    /**
     * Address of the point of entry to the external compilation result.
     */
    private long entryPoint;

    public ExternalCompilationResult() {
        super();
    }

    /**
     * Set the address for the point of entry to the external compilation result.
     * 
     * @param addr the address of the entry point
     */
    public void setEntryPoint(long addr) {
        entryPoint = addr;
    }

    /**
     * Return the address for the point of entry to the external compilation result.
     * 
     * @return address value
     */
    public long getEntryPoint() {
        return entryPoint;
    }
}
