#!/bin/bash

# The command this file executes is what mx would execute, just taken out of
# the mx wrapper because it appears to interfere with MSpec, and we need a
# 'executable' (a shell script will do) to run.
#
# If this file isn't working for you try generating one for your setup. You
# will need to do this for example if your Java isn't 1.7.0u45. You can use
# the command below - the -v flag gives you the Java command, then just append
# "$@".
#
#     $GRAAL_DIR/mxtool/mx -v --vm server-nograal ruby -ea -- --home $GRAAL_DIR "$@"

GRAAL_DIR=../../..

$GRAAL_DIR/jdk1.7.0_45/product/bin/java \
  -server-nograal -d64 -ea \
  -cp $GRAAL_DIR/lib/jline-2.10.jar:$GRAAL_DIR/lib/jrubyparser-0.5.0.jar:$GRAAL_DIR/lib/jruby-stdlib-1.7.4.jar:$GRAAL_DIR/lib/jnr-posix-3.0.0.jar:$GRAAL_DIR/lib/jnr-constants-0.8.4.jar:$GRAAL_DIR/lib/jnr-ffi-1.0.4.jar:$GRAAL_DIR/lib/jffi-1.2.1.jar:$GRAAL_DIR/lib/jffi-1.2.1-native.jar:$GRAAL_DIR/lib/jnr-x86asm-1.0.2.jar:$GRAAL_DIR/lib/asm-4.0.jar:$GRAAL_DIR/lib/asm-analysis-4.0.jar:$GRAAL_DIR/lib/asm-commons-4.0.jar:$GRAAL_DIR/lib/asm-tree-4.0.jar:$GRAAL_DIR/lib/asm-util-4.0.jar:$GRAAL_DIR/graal/com.oracle.truffle.api/bin:$GRAAL_DIR/graal/com.oracle.truffle.ruby.runtime/bin:$GRAAL_DIR/graal/com.oracle.truffle.api.dsl/bin:$GRAAL_DIR/graal/com.oracle.truffle.ruby.nodes/bin:$GRAAL_DIR/graal/com.oracle.truffle.ruby.parser/bin:$GRAAL_DIR/graal/com.oracle.truffle.ruby.shell/bin \
  com.oracle.truffle.ruby.shell.Shell \
  --home $GRAAL_DIR "$@"
